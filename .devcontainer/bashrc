# Custom bashrc for P-WVC Development

# Source the default bashrc if it exists
if [ -f /etc/bash.bashrc ]; then
    . /etc/bash.bashrc
fi

# Enable bash completion
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Set a colorful prompt
export PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

# Enable color support for ls and grep
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Set history options
HISTCONTROL=ignoreboth
HISTSIZE=1000
HISTFILESIZE=2000
shopt -s histappend
shopt -s checkwinsize

# Make less more friendly for non-text input files
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Set Go environment variables
export GOPATH=/go
export GOROOT=/usr/local/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin:$HOME/go/bin

# Node.js environment
export NODE_OPTIONS="--max-old-space-size=4096"

# Development environment variables for P-WVC
export DATABASE_URL="postgres://pwvc:password@localhost:5432/pwvc?sslmode=disable"
export PORT=8080
export GIN_MODE=debug

# Welcome message
echo "üöÄ P-WVC Development Environment Ready!"
echo "üìç Working directory: $(pwd)"
echo "üêπ Go version: $(go version | cut -d' ' -f3-4)"
echo "üì¶ Node version: $(node --version)"
echo ""
echo "üí° Type 'pwvc-setup' to initialize the project structure"
echo "üí° Type './setup-db.sh' to start the development database"
echo ""export PATH=$PATH:/go/bin:$HOME/go/bin
export GOPATH=/go
export GOROOT=/usr/local/go

# P-WVC Development Aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias ..='cd ..'
alias ...='cd ../..'

# Go shortcuts
alias gor='go run .'
alias gob='go build .'
alias got='go test ./...'
alias gof='go fmt ./...'
alias gov='go vet ./...'
alias gom='go mod tidy'

# Git shortcuts
alias gs='git status'
alias ga='git add'
alias gc='git commit'
alias gp='git push'
alias gl='git log --oneline'
alias gd='git diff'

# P-WVC specific shortcuts
alias start-db='docker run --name pwvc-postgres -e POSTGRES_PASSWORD=password -e POSTGRES_DB=pwvc -p 5432:5432 -d postgres:15-alpine'
alias stop-db='docker stop pwvc-postgres && docker rm pwvc-postgres'
alias logs-db='docker logs pwvc-postgres'

# Development functions
pwvc-setup() {
    echo "üèóÔ∏è Setting up P-WVC development environment..."
    
    # Initialize Go module if not exists
    if [ ! -f "go.mod" ]; then
        go mod init pwvc
    fi
    
    # Create basic project structure
    mkdir -p {cmd/server,internal/{api,domain,repository,service,websocket},pkg,migrations,web/src}
    
    echo "‚úÖ P-WVC project structure created!"
}

pwvc-run() {
    echo "üöÄ Starting P-WVC application..."
    go run ./cmd/server
}

pwvc-test() {
    echo "üß™ Running P-WVC tests..."
    go test -v ./...
}

pwvc-build() {
    echo "üì¶ Building P-WVC application..."
    go build -o pwvc ./cmd/server
}

pwvc-dev() {
    echo "üîÑ Starting P-WVC in development mode..."
    # You can add auto-reload functionality here later
    go run ./cmd/server
}

